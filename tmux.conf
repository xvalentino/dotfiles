set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Scroll
set -g mouse on

# get vim color scheme to work inside of tmux
set -g default-terminal "screen-256color"

#  ================ Status bar ========================

# Status
set -g status "on"
set -g status-style "bg=colour236,none"

# Status Left
set -g status-left ""

# Status Right
set -g status-right "#[fg=colour239,bg=colour236,nobold,nounderscore,noitalics]⮂#[fg=colour015,bg=colour239] %H:%M #[fg=colour215,bg=colour239]⮃#[fg=colour015,bg=colour239] %m-%d-%Y #[fg=colour087,bg=colour239]#[fg=colour215]⮃ #(battery -t -p -a -g colour155 -m colour227 -w colour167)"

# Pane
set -g pane-border-style "fg=colour253"
set -g pane-active-border-style "fg=colour215"

# Window Status
setw -g window-status-format "#[fg=colour244,bg=colour236] #I ⮁#[fg=colour244,bg=colour236] #W "
setw -g window-status-current-format "#[fg=colour215,bg=colour239] #I #[fg=colour215,bg=colour239]⮁#[fg=colour015,bg=colour239] #W #[fg=colour239,bg=colour236,nobold,nounderscore,noitalics]⮀"
setw -g window-status-separator ""

#move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
